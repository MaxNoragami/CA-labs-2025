;// ------------------------------------------------------------ -
;// 2. AddVariables Program
;// Modify the AddVariables program so it uses 64 - bit variables.
;// Describe the syntax errors generated by the assembler and
;// what steps you took to resolve the errors
;// ------------------------------------------------------------ -

.386
.model flat, stdcall
.stack 4096
ExitProcess proto, dwExitCode:dword
.data
val1 QWORD 12345678h		;// Using QWORD(64 - bit) instead of DWORD
val2 QWORD 87654321h		;// Using QWORD(64 - bit) instead of DWORD
sum QWORD 0				;// Result will be 64 - bit

;// Adding new variables to demonstrate carry propagation
val3 QWORD 00000001FFFFFFFFh	;// Upper: 00000001h, Lower: FFFFFFFFh
val4 QWORD 0000000200000001h	;// Upper: 00000002h, Lower: 00000001h
sum2 QWORD 0				;// Second result will be 64-bit

.code
main proc
;// Load the low 32 bits of val1 into EAX
mov eax, DWORD PTR val1
;// Load the high 32 bits of val1 into EDX
mov edx, DWORD PTR val1 + 4
;// Add the low 32 bits of val2 to EAX
add eax, DWORD PTR val2
;// Add the high 32 bits of val2 to EDX with carry
adc edx, DWORD PTR val2 + 4
;// Store the low 32 bits of the result in sum
mov DWORD PTR sum, eax
;// Store the high 32 bits of the result in sum + 4
mov DWORD PTR sum + 4, edx

;// DEMONSTRATING CARRY PROPAGATION WITH NEW VARIABLES
;// Load val3 into ECX (low 32 bits) and EBX (high 32 bits)
mov ecx, DWORD PTR val3		;// Lower 32 bits (FFFFFFFFh)
mov ebx, DWORD PTR val3 + 4	;// Upper 32 bits (00000001h)

;// Add val4 to ECX:EBX pair
add ecx, DWORD PTR val4;// Adding 00000001h to FFFFFFFFh (will generate carry)
adc ebx, DWORD PTR val4 + 4	;// Adding 00000002h to 00000001h plus carry

;// Store the result in sum2
mov DWORD PTR sum2, ecx
mov DWORD PTR sum2 + 4, ebx

invoke ExitProcess, 0
main endp
end main